#Code to genrate probability distribution with Mixture of distributions saved in matfiles
# Author : Sandeep Manjanna (McGill University)

#Files generated by this code are :
# gaussian_samples_30x30_1.mat is used to generate gaussian_mixture_data1.pkl
# gaussian_testset_30x30_1.mat is used to generate gaussian_mixture_test1.pkl
# banana_testset_30x30_2.mat is used to generate banana_test2.pkl

import numpy as np
import scipy.io as sio
import matplotlib.pyplot as plt
import pickle
import matplotlib

#data = sio.loadmat('../matlab_data/gaussian_samples_30x30_1.mat')
#data = sio.loadmat('../matlab_data/gaussian_testset_30x30_1.mat')
data = sio.loadmat('../matlab_data/banana_testset_30x30_2.mat')

samples = np.floor(data['Y']).astype('int')
unique, counts = np.unique(samples, return_counts=True, axis=0)
num_samples = samples.shape[0]
print num_samples
prob = np.zeros((30,30))
for i in range(counts.size):
    prob[unique[i][0],unique[i][1]] = float(counts[i])/num_samples

#pickle.dump(prob,open('../testingData/gaussian_mixture_test2.pkl',"w"))
#pickle.dump(prob,open('../testingData/gaussian_mixture_test1.pkl',"w"))
pickle.dump(prob,open('../testingData/cShaped_test3.pkl',"w"))

print np.sum(prob)

plt.figure(figsize=(8,6))
x = np.linspace(0, 29, 30)
y = np.linspace(0, 29, 30)
X, Y = np.meshgrid(x, y)
levels = np.linspace(np.min(prob),np.max(prob),100)
plt.contourf(X, Y, prob, levels, cmap='viridis')
plt.colorbar()
plt.xlabel('Distance (m)',fontsize=24, color='red')
matplotlib.rcParams.update({'font.size': 16})
plt.show()
